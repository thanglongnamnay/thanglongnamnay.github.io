"use strict";function Vector(t,n){const o=Math.sqrt(t*t+n*n);function r(o){return Vector(t-o.x,n-o.y)}function e(o){return Math.atan2(o.y,o.x)-Math.atan2(n,t)}function u(o){return Vector(t*o.height>>0,n*o.height>>0)}return{x:t,y:n,normalized:function(){return Vector(t/o,n/o)},mag:function(){return o},angle:function(){return e(Vector(1,0))},distantTo:function(t){return r(t).mag()},plus:function(o){return Vector(t+o.x,n+o.y)},minus:r,mult:function(o){return Vector(t*o,n*o)},div:function(o){return Vector(t/o,n/o)},dot:function(o){return t*o.x+n*o.y},angleTo:e,parallel:function(o){return t/o.x>0&&(t/o.x).toFixed(8)===(n/o.y).toFixed(8)},equal:function(o){return t.toFixed(8)===o.x.toFixed(8)&&n.toFixed(8)===o.y.toFixed(8)},rotate:function(o){const r=Math.sin(o),e=Math.cos(o);return Vector(e*t-r*n,r*t+e*n)},toWorld:u}}function Polygon(t,n){return{color:t,points:n,draw:function(o,r){const e=n.map(t=>t.toWorld(o));r.fillStyle=t,r.strokeStyle="black",r.beginPath();for(let t=0;t<e.length;++t)r.lineTo(e[t].x,e[t].y);r.closePath(),r.fill(),r.stroke()},move:function(o){return Polygon(t,n.map(t=>t.plus(o)))},addPoints:function(...t){return n.push(...t)},toObject:function(){return{color:t,points:n.map(t=>({x:t.x,y:t.y}))}}}}Polygon.fromObject=function(t){return Polygon(t.color,t.points.map(t=>Vector(t.x,t.y)))};