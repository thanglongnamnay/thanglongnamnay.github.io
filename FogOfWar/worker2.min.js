"use strict";importScripts("util.min.js","classes.min.js","pre.min.js");const lineColor="#ddd",scale=2,dotColor="#d11";let canvas,ctx;const handleMouseMove=[],handleMouseClick=[],handleKeyUp=[];let polygonList=[];const canvasRect=Polygon("#eee",[Vector(0,0),Vector(1,0),Vector(1,1),Vector(0,1)]);self.onmessage=a=>{const n=a.data.index;if(a.data.e)switch(a.data.type){case"move":handleMouseMove[n]&&handleMouseMove[n](a.data.e);break;case"click":handleMouseClick[n]&&handleMouseClick[n](a.data.e);break;case"keyup":handleKeyUp[n]&&handleKeyUp[n](a.data.e);break;case"apply":handleRequestApply();break;case"reset":handleRequestReset()}else a.data.offscreen&&(canvas=a.data.offscreen,ctx=canvas.getContext("2d")),handleApply(a.data.polygonList),n<8&&(handleMouseClick[n]&&handleMouseClick[n]({x:canvas.width/2,y:canvas.height/2}),handleMouseMove[n]&&handleMouseMove[n]({x:canvas.width/2,y:canvas.height/2}))},handleMouseMove[0]=function(a){redraw(canvas,ctx,polygonList);const{x:n,y:o}=a,t=Vector(n/canvas.width,o/canvas.height);drawPoint(canvas,ctx,"#d11",t)},handleMouseMove[1]=handleMouseClick[1]=function(a){redraw(canvas,ctx,polygonList);const n=getRays(60),{x:o,y:t}=a,e=Vector(o/canvas.width,t/canvas.height),c=drawAllRayIntersection(canvas,ctx,e,polygonList,n);Polygon("#eee",c).draw(canvas,ctx),c.forEach(a=>drawRay(canvas,ctx,"#ddd",e,a.minus(e))),c.forEach(a=>drawPoint(canvas,ctx,"red",a)),drawPoint(canvas,ctx,"#d11",e)},handleMouseMove[2]=handleMouseClick[2]=function(a){redraw(canvas,ctx,polygonList);const n=getRays(60),{x:o,y:t}=a,e=Vector(o/canvas.width,t/canvas.height),c=drawAllRayIntersection(canvas,ctx,e,polygonList,n);Polygon("#eee",c).draw(canvas,ctx),drawPoint(canvas,ctx,"#d11",e)},handleMouseMove[3]=!1,handleMouseClick[3]=function(a){redraw(canvas,ctx,polygonList);const n=getRays(6e3),{x:o,y:t}=a,e=Vector(o/canvas.width,t/canvas.height),c=drawAllRayIntersection(canvas,ctx,e,polygonList,n);Polygon("#eee",c).draw(canvas,ctx),drawPoint(canvas,ctx,"#d11",e)},handleMouseMove[4]=function(a){redraw(canvas,ctx,polygonList);const{x:n,y:o}=a,t=Vector(n/canvas.width,o/canvas.height),e=drawAllRayVertex(canvas,ctx,t,polygonList,!1);Polygon("#eee",e).draw(canvas,ctx),e.forEach(a=>drawRay(canvas,ctx,"#ddd",t,a.minus(t))),e.forEach(a=>drawPoint(canvas,ctx,"red",a)),drawPoint(canvas,ctx,"#d11",t)},handleMouseMove[5]=function(a){redraw(canvas,ctx,polygonList);const{x:n,y:o}=a,t=Vector(n/canvas.width,o/canvas.height),e=drawAllRayVertex(canvas,ctx,t,polygonList);Polygon("#eee",e).draw(canvas,ctx),e.forEach(a=>drawRay(canvas,ctx,"#ddd",t,a.minus(t))),e.forEach(a=>drawPoint(canvas,ctx,"red",a)),drawPoint(canvas,ctx,"#d11",t)},handleMouseMove[6]=function(a){redraw(canvas,ctx,polygonList);const{x:n,y:o}=a,t=Vector(n/canvas.width,o/canvas.height),e=drawAllRayVertex(canvas,ctx,t,[...polygonList,canvasRect]);Polygon("#eee",e).draw(canvas,ctx),e.forEach(a=>drawRay(canvas,ctx,"#ddd",t,a.minus(t))),e.forEach(a=>drawPoint(canvas,ctx,"red",a)),drawPoint(canvas,ctx,"#d11",t)},handleMouseMove[7]=function(a){redraw(canvas,ctx,polygonList);const{x:n,y:o}=a,t=Vector(n/canvas.width,o/canvas.height),e=drawAllRayVertex(canvas,ctx,t,[...polygonList,canvasRect]);Polygon("#eee",e).draw(canvas,ctx),drawPoint(canvas,ctx,"#d11",t)};const customPolygonList=[];let drawing=!1,currentPolygon=Polygon(randomColor(),[]),nextPolygon=Polygon(randomColor(),[Vector(0,0)]);function handleRequestApply(){self.postMessage(customPolygonList.map(a=>a.toObject()))}function handleRequestReset(){customPolygonList.length=0,redraw(canvas,ctx,customPolygonList)}function handleApply(a){polygonList=a.map(Polygon.fromObject),redraw(canvas,ctx,polygonList)}handleMouseClick[8]=function(a){const{x:n,y:o}=a,t=Vector(n/canvas.width,o/canvas.height);currentPolygon.addPoints(t),nextPolygon.points[nextPolygon.points.length-1]=t,nextPolygon.addPoints(t),redraw(canvas,ctx,[...customPolygonList,currentPolygon]),drawing=!0},handleMouseMove[8]=function(a){const{x:n,y:o}=a,t=Vector(n/canvas.width,o/canvas.height);if(redraw(canvas,ctx,customPolygonList),drawing)nextPolygon.points[nextPolygon.points.length-1]=t,redraw(canvas,ctx,[...customPolygonList,nextPolygon,currentPolygon]);else{redraw(canvas,ctx,customPolygonList);const{x:n,y:o}=a,t=Vector(n/canvas.width,o/canvas.height),e=drawAllRayVertex(canvas,ctx,t,[...customPolygonList,canvasRect]);Polygon("#eee",e).draw(canvas,ctx)}drawPoint(canvas,ctx,"#d11",t)},handleKeyUp[8]=function(a){13===a.which&&(customPolygonList.push(currentPolygon),redraw(canvas,ctx,customPolygonList),currentPolygon=Polygon(randomColor(),[]),nextPolygon=Polygon(randomColor(),[Vector(0,0)]),drawing=!1)};