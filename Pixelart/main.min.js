"use strict";const holder=document.getElementById("image-holder"),chunkSizeInput=document.getElementById("chunkSize"),fileInput=document.getElementById("uploadInput");fileInput.onchange=updateSize,document.getElementById("createPixelArtButton").onclick=handleMakeArtButton;const worker=new Worker("worker.min.js"),CHUNK_SIZE=5,makeFill=(e,t)=>(n,o,l)=>{t[o*e+n].style.background=`rgba(${l[0]}, ${l[1]}, ${l[2]}, ${l[3]})`};function createDivs(e,t){holder.innerHTML="",holder.style.gridTemplateColumns="10px ".repeat(e),holder.style.gridTemplateRows="10px ".repeat(t);for(let n=0;n<t;++n)for(let t=0;t<e;++t){const e=document.createElement("div");holder.appendChild(e)}return holder.getElementsByTagName("div")}function pixelArt(e,t){const n=document.createElement("canvas");n.width=e.width,n.height=e.height;const o=n.getContext("2d");o.drawImage(e,0,0);const l=e.width>>t,r=e.height>>t,i=createDivs(l,r),a=makeFill(l,i);worker.onmessage=e=>{const{x:t,y:n,mean:o}=e.data;a(t,n,o)};for(let e=0;e<r;++e)for(let n=0;n<l;++n){const l=o.getImageData(n<<t,e<<t,1<<t,1<<t);worker.postMessage({x:n,y:e,data:l.data})}}function printFile(e,t){const n=new Image;n.src=URL.createObjectURL(e),n.onload=e=>{pixelArt(n,t)}}function updateSize(e){let t=e.target.files[0].size,n=t+" bytes";for(let e=["KB","MB","GB","TB","PB","EB","ZB","YB"],o=0,l=t/1024;l>1;l/=1024,o++)n=l.toFixed(3)+" "+e[o]+" ("+t+" bytes)";document.getElementById("fileNum").innerHTML=1,document.getElementById("fileSize").innerHTML=n}function handleMakeArtButton(e){printFile(fileInput.files[0],chunkSizeInput.value)}