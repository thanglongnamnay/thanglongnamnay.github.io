"use strict";export default function Calculate(){function t(e){let n=[];return Object.freeze({input:function(t){n=t},set:function(t,e){n[t]=e},get:function(t){return n[t]},plus:function(u){const o=t(e);for(let t=0;t<e;++t)o.set(t,n[t]+u.get(t));return o},minus:function(u){const o=t(e);for(let t=0;t<e;++t)o.set(t,n[t]-u.get(t));return o},mult:function(u){const o=t(e);for(let t=0;t<e;++t)o.set(t,n[t]*u);return o},divide:function(u){const o=t(e);for(let t=0;t<e;++t)o.set(t,n[t]/u);return o},output:function(t){let u="";for(let t=0;t<e-1;++t)u+="x"+t+" = "+ +n[t].toFixed(8)+", ";return u+="x"+(e-1)+" = "+ +n[e-1].toFixed(8),t&&t(u),u},clone:function(){let u=[...n],o=t(e);return o.input(u),o}})}return Object.freeze({SquaredMatrix:function(e){let n=[];for(let u=0;u<e;++u)n.push(t(e+1));function u(t){let u=t;for(let o=t+1;o<e;++o)Math.abs(n[o].get(t))>Math.abs(n[u].get(t))&&(u=o);!function(t,e){const u=n[t].clone();n[t]=n[e],n[e]=u}(t,u)}return Object.freeze({input:function(t){for(let u=0;u<e;++u)n[u].input(t[u])},findRoot:function(){!function(){for(let t=0;t<e-1;++t){u(t);for(let u=t+1;u<e;++u)0!==n[t].get(t)&&(n[u]=n[t].mult(n[u].get(t)/n[t].get(t)).minus(n[u]))}}();const o=t(e);for(let t=e-1;t>=0;--t){let u=n[t].get(e);for(let r=e-1;r>t;--r)u-=o.get(r)*n[t].get(r);if(0===n[t].get(t))return 0===u?Object.freeze({output:function(t){return t("Vô số nghiệm!"),"Vô số nghiệm!"}}):Object.freeze({output:function(t){return t("Vô nghiệm!"),"Vô nghiệm!"}});o.set(t,u/n[t].get(t))}return o},output:function(t){for(let u=0;u<e;++u)n[u].output(t)}})}})}